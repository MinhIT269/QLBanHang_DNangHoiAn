﻿
<!DOCTYPE html>
<html lang="en">

<head>
    @await Html.PartialAsync("_Header")
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
        }

        canvas {
            margin-top: 20px;
            width: 100% !important;
            height: auto !important;
        }

        #error-message {
            color: red;
            font-weight: bold;
        }
    </style>
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>

    <!-- START Wrapper -->
    <div class="wrapper">

        <!-- ========== Topbar Start ========== -->
        <header class="topbar">
            <div class="container-fluid">
                <div class="navbar-header">
                    <div class="d-flex align-items-center">
                        <!-- Menu Toggle Button -->
                        <div class="topbar-item">
                            <button type="button" class="button-toggle-menu me-2">
                                <iconify-icon icon="solar:hamburger-menu-broken" class="fs-24 align-middle"></iconify-icon>
                            </button>
                        </div>

                        <!-- Menu Toggle Button -->
                        <div class="topbar-item">
                            <h4 class="fw-bold topbar-button pe-none text-uppercase mb-0">Welcome!</h4>
                        </div>
                    </div>

                    <div class="d-flex align-items-center gap-1">

                        @await Html.PartialAsync("_Topbar")
                    </div>
                </div>
            </div>
        </header>

        <!-- Right Sidebar (Theme Settings) -->
        @await Html.PartialAsync("_SidebarRight")
        <!-- ========== Topbar End ========== -->
        <!-- ========== App Menu Start ========== -->
        @await Html.PartialAsync("_SidebarMenu")
        <!-- ========== App Menu End ========== -->
        <!-- ==================================================== -->
        <!-- Start right Content here -->
        <!-- ==================================================== -->
        <div class="page-content">

            <!-- Start Container Fluid -->
            <div class="container-fluid">

                <!-- Start here.... -->
                <div class="row">
                    <div class="col-lg-4 col-md-4 col-sm-12">
                        <div class="card overflow-hidden">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-6">
                                        <div class="avatar-md bg-soft-primary rounded">
                                            <i class="bx bx-dollar-circle avatar-title text-primary fs-24"></i>
                                        </div>
                                    </div> <!-- end col -->
                                    <div class="col-6 text-end">
                                        <p class="text-muted mb-0 text-truncate">DOANH THU</p>
                                        <h3 class="text-dark mt-1 mb-0" id="TotalAmount">999</h3>
                                    </div> <!-- end col -->
                                </div> <!-- end row-->
                            </div> <!-- end card body -->
                            <div class="card-footer py-2 bg-light bg-opacity-50">
                                <div class="d-flex align-items-center justify-content-between">
                                    <a href="@Url.Action("IndexOrder", "Order")" class="text-reset fw-semibold fs-12">Xem thêm</a>
                                </div>
                            </div> <!-- end card body -->
                        </div> <!-- end card -->
                    </div> <!-- end col -->
                    <div class="col-lg-4 col-md-4 col-sm-12">
                        <div class="card overflow-hidden">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-6">
                                        <div class="avatar-md bg-soft-primary rounded">
                                            <iconify-icon icon="solar:cart-5-bold-duotone" class="avatar-title fs-32 text-primary"></iconify-icon>
                                        </div>
                                    </div> <!-- end col -->
                                    <div class="col-6 text-end">
                                        <p class="text-muted mb-0 text-truncate">ĐƠN HÀNG</p>
                                        <h3 class="text-dark mt-1 mb-0" id="OrderSuccess">999</h3>
                                    </div> <!-- end col -->
                                </div> <!-- end row-->
                            </div> <!-- end card body -->
                            <div class="card-footer py-2 bg-light bg-opacity-50">
                                <div class="d-flex align-items-center justify-content-between">
                                    <a href="@Url.Action("IndexOrder", "Order")" class="text-reset fw-semibold fs-12">Xem thêm</a>
                                </div>
                            </div> <!-- end card body -->
                        </div> <!-- end card -->
                    </div> <!-- end col -->
                    <div class="col-lg-4 col-md-4 col-sm-12">
                        <div class="card overflow-hidden">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-6">
                                        <div class="avatar-md bg-soft-primary rounded">
                                            <i class="bx bx-award avatar-title fs-24 text-primary"></i>
                                        </div>
                                    </div> <!-- end col -->
                                    <div class="col-6 text-end">
                                        <p class="text-muted mb-0 text-truncate">KHÁCH HÀNG</p>
                                        <h3 class="text-dark mt-1 mb-0" id="UserTotal">999</h3>
                                    </div> <!-- end col -->
                                </div> <!-- end row-->
                            </div> <!-- end card body -->
                            <div class="card-footer py-2 bg-light bg-opacity-50">
                                <div class="d-flex align-items-center justify-content-between">
                                    <a href="@Url.Action("IndexCustomer", "Customer")" class="text-reset fw-semibold fs-12">Xem thêm</a>
                                </div>
                            </div> <!-- end card body -->
                        </div> <!-- end card -->
                    </div> <!-- end col -->
                </div> <!-- end row -->
                <div class="row">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <h4 class="card-title">Đơn Hàng</h4>
                                <div>
                                    <button type="button" class="btn btn-sm btn-outline-light" data-period="week">Tuần</button>
                                    <button type="button" class="btn btn-sm btn-outline-light" data-period="month">Tháng</button>
                                    <button type="button" class="btn btn-sm btn-outline-light active" data-period="year">Năm</button>
                                </div>
                            </div>
                            <!-- Biểu đồ sẽ hiển thị tại đây -->
                            <div dir="ltr">
                                <div id="chart-container">
                                    <canvas id="orderChart" width="600" height="200"></canvas>
                                    <p id="error-message" style="color: red;"></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <!-- End Container Fluid -->
            <!-- ========== Footer Start ========== -->
            @await Html.PartialAsync("_Footer")
            <!-- ========== Footer End ========== -->

        </div>
        <!-- ==================================================== -->
        <!-- End Page Content -->
        <!-- ==================================================== -->

    </div>
    <!-- END Wrapper -->
    <!-- Vendor Javascript (Require in all Page) -->
    <script src="~/js/vendor.js"></script>
    <!-- App Javascript (Require in all Page) -->
    <script src="~/js/app.js"></script>

    <!-- Dashboard Js -->
    <script src="~/js/pages/dashboard.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let orderChart;

        // Tạo biểu đồ mặc định
        function createChart(labels = [], values = []) {
            const chartCanvas = document.getElementById('orderChart');

            orderChart = new Chart(chartCanvas, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Orders',
                        data: values,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top'
                        },
                        tooltip: {
                            enabled: true
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        // Cập nhật biểu đồ
        function updateChart(labels, values) {
            orderChart.data.labels = labels;
            orderChart.data.datasets[0].data = values;
            orderChart.update();
        }

        // Tải dữ liệu từ API
        async function loadData(period) {
            const errorMessage = document.getElementById('error-message');
            errorMessage.textContent = ''; // Xóa lỗi cũ

            try {
                const response = await fetch(`https://localhost:7069/api/Order/statistics?period=${period}`);
                if (!response.ok) {
                    throw new Error('Failed to fetch data. Please check the API endpoint.');
                }

                const data = await response.json();
                const labels = Object.keys(data);
                const values = Object.values(data);

                if (orderChart) {
                    updateChart(labels, values);
                } else {
                    createChart(labels, values);
                }
            } catch (error) {
                errorMessage.textContent = error.message;
            }
        }

        // Lắng nghe sự kiện click trên các nút chọn thời gian
        document.querySelectorAll('.btn[data-period]').forEach(button => {
            button.addEventListener('click', (event) => {
                // Xóa lớp 'active' khỏi tất cả các nút
                document.querySelectorAll('.btn[data-period]').forEach(btn => btn.classList.remove('active'));

                // Thêm lớp 'active' vào nút được nhấn
                event.target.classList.add('active');

                // Lấy giá trị 'data-period' từ nút
                const period = event.target.getAttribute('data-period');

                // Gọi hàm loadData với khoảng thời gian tương ứng
                loadData(period);
            });
        });

        // Khi trang được tải, gọi hàm loadData cho 'week' mặc định
        document.addEventListener('DOMContentLoaded', () => {
            loadData('week');
        });
        async function loadOrdersStats() {
            try {
                const response = await fetch("https://localhost:7069/api/Order/GetOrdersStats");
                const stats = await response.json();
                console.log(stats);
                document.getElementById('OrderSuccess').innerText = `${stats.orderSuccess}`;
                const formattedTotalAmount = new Intl.NumberFormat('vi-VN', {
                    style: 'currency',
                    currency: 'VND'
                }).format(stats.totalAmount);

                document.getElementById('TotalAmount').innerText = `${formattedTotalAmount}`;
            } catch (error) {
                console.error("Failed to load orders stats: ", error);
            }
        }
        async function loadUsersStats() {
            try {
                const response = await fetch("https://localhost:7069/api/User/TotalUsers");
                const stats = await response.json();
                console.log(stats);
                document.getElementById('UserTotal').innerText = stats.totalUsers || 0;
            } catch (error) {
                console.error("Failed to load user stats: ", error);
            }
        }
        loadUsersStats();
        loadOrdersStats();
    </script>
</body>

</html>

