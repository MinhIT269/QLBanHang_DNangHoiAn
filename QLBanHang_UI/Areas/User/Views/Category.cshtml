@model QLBanHang_UI.Models.ViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html>
<html lang="en">

<meta http-equiv="content-type" content="text/html;charset=UTF-8" />
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>Đặc Sản Hội An-Đà Nẵng</title>

    <meta name="keywords" content="HTML5 Template" />
    <meta name="description" content="Đặc Sản Đà Nẵng Hội An" />
    <meta name="author" content="BKDN" />

    <!-- Favicon -->
    <link rel="shortcut icon" href="~/images/logo.png">

    <script>
        WebFontConfig = {
            google: {
                families: ['Open+Sans:300,400,600,700,800', 'Poppins:300,400,500,600,700', 'Shadows+Into+Light:400']
            }
        };
        (function (d) {
            var wf = d.createElement('script'),
                s = d.scripts[0];
            wf.src = '/js/webfont.js';
            wf.async = true;
            s.parentNode.insertBefore(wf, s);
        })(document);
    </script>

    <!-- Plugins CSS File -->
    <link rel="stylesheet" href="~/css/bootstrap.min.css">

    <!-- Main CSS File -->
    <link rel="stylesheet" href="~/css/demo9.min.css">

    <link rel="stylesheet" type="text/css" href="~/vendor/fontawesome-free/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="~/vendor/simple-line-icons/css/simple-line-icons.min.css">
</head>

<body class="boxed">
    <div class="page-wrapper">
        <header class="header mb-0" data-y="0" style="border-bottom: 0 !important;">
            @await Html.PartialAsync("_Header", Model)
        </header>

    </div>
    <!-- End .header -->

    <main class="main">

        <div class="container">
            <div>
                <section class="featured-products-section">
                    <h2 class="section-title title-decorate text-center d-flex align-items-center appear-animate" data-animation-delay="100" data-animation-duration="1500">Tất cả sản phẩm</h2>
                    <div class="col-lg-12 main-content">

                        <div class="row" id="product-list">
                            <!-- End .col-sm-4 -->
                        </div>
                        <!-- End .row -->

                        <nav class="toolbox toolbox-pagination">
                            <ul class="pagination toolbox-item">
                                <!-- Trang trước (prev) -->
                                <li class="page-item">
                                    <a id="prev-page" class="page-link page-link-btn" href="#" aria-label="Previous">
                                        <i class="icon-angle-left"></i>
                                    </a>
                                </li>

                                <!-- Trang hiện tại -->
                                <li class="page-item active">
                                    <a class="page-link" href="#">1 <span class="sr-only">(current)</span></a>
                                </li>

                                <!-- Các trang tiếp theo -->
                                <li class="page-item">
                                    <a class="page-link" href="#">2</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="#">3</a>
                                </li>

                                <!-- Hiển thị dấu chấm nếu có thêm nhiều trang -->
                                <li class="page-item">
                                    <span class="page-link">...</span>
                                </li>

                                <!-- Trang sau (next) -->
                                <li class="page-item">
                                    <a id="next-page" class="page-link page-link-btn" href="#" aria-label="Next">
                                        <i class="icon-angle-right"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>

                    </div>
                </section>
                <!-- End .col-lg-9 -->

                <div class="sidebar-overlay"></div>
                <!-- End .col-lg-3 -->
            </div>
            <!-- End .row -->
        </div>
        <!-- End .container -->

        <div class="mb-4"></div>
        <!-- margin -->
    </main>
    <!-- End .main -->
    @await Html.PartialAsync("_Footer")
    <!-- End .footer -->
    <!-- End .page-wrapper -->


    <a id="scroll-top" href="#top" title="Top" role="button"><i class="icon-angle-up"></i></a>

    <!-- Plugins JS File -->
    <script data-cfasync="false" src="~/js/email-decode.min.js"></script>
    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/plugins.min.js"></script>
    <script src="~/js/nouislider.min.js"></script>

    <!-- Main JS File -->
    <script src="~/lib/jquery/dist/main.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let currentPage = 1; // Trang hiện tại
            let totalPages = 10; // Số trang mặc định (cập nhật từ API)

            const paginationElement = document.querySelector('.pagination');
            const productListElement = document.getElementById('product-list');
            const prevPageBtn = document.getElementById('prev-page');
            const nextPageBtn = document.getElementById('next-page');
            const searchInput = document.getElementById('search');
            const searchButton = document.getElementById('search-btn');

            // Lấy các tham số từ URL
            function getParamsFromURL() {
                const params = new URLSearchParams(window.location.search);
                return {
                    search: params.get('search') || '',
                    category: params.get('category') || '',
                    brandName: params.get('brandName') || '',
                    page: parseInt(params.get('page')) || 1
                };
            }

            // Cập nhật URL mà không reload trang
            function updateURL(params) {
                const url = new URL(window.location.href);
                url.searchParams.set('search', params.search || '');
                url.searchParams.set('category', params.category || '');
                url.searchParams.set('brandName', params.brandName || '');
                url.searchParams.set('page', params.page || 1);
                history.pushState({}, '', url);
            }

            // Gọi API để tải sản phẩm
            async function loadProducts() {
                const params = getParamsFromURL();
                params.page = currentPage;

                updateURL(params);

                try {
                    let url = `https://localhost:7069/api/Product/SearchAndCategory?`;
                    if (params.search) url += `search=${encodeURIComponent(params.search)}&`;
                    if (params.category) url += `category=${encodeURIComponent(params.category)}&`;
                    if (params.brandName) url += `brandName=${encodeURIComponent(params.brandName)}&`;
                    if (params.page) url += `page=${params.page}`;

                    const response = await fetch(url);

                    if (!response.ok) throw new Error('Lỗi khi tải sản phẩm');

                    const data = await response.json();
                    const products = Array.isArray(data) ? data : [];
                    const totalPagesFromApi = 3; // Giả định số trang từ API

                    let productsHtml = '';
                    products.forEach((product) => {
                        productsHtml += `
                                            <div class="col-6 col-sm-4">
                                                <div class="product-default">
                                                    <figure>
                                                        <a href="product.html">
                                                            <img src="${product.imageUrl}" width="280" height="280" alt="product" style="width:300px; height:300px "/>
                                                        </a>
                                                        <div class="label-group">
                                                            <div class="product-label label-hot">HOT</div>
                                                        </div>
                                                    </figure>
                                                    <div class="product-details">
                                                        <div class="category-wrap">
                                                            <div class="category-list">
                                                                <a href="category.html" class="product-category">${product.categoryNames}</a>
                                                            </div>
                                                        </div>
                                                        <h3 class="product-title">
                                                            <a href="product.html">${product.name}</a>
                                                        </h3>
                                                        <div class="price-box">
                                                                    <span class="old-price">
                                                                         ${product.promotionPrice
                                ? `${product.price.toLocaleString('vi-VN')}đ`
                                : ''}
                                                                    </span>
                                                            <span class="product-price">
                                                                ${product.promotionPrice
                                ? `${product.promotionPrice.toLocaleString('vi-VN')}đ`
                                : `${product.price.toLocaleString('vi-VN')}đ`}
                                                            </span>

                                                        </div>
                                                        <div class="product-action">
                                                            <a href="wishlist.html" class="btn-icon-wish" title="wishlist"><i class="icon-heart"></i></a>
                                                            <a href="product.html" class="btn-icon btn-add-cart"><i class="fa fa-arrow-right"></i><span>Thêm vào giỏ</span></a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        `;
                    });

                    if (productListElement) {
                        productListElement.innerHTML = productsHtml;
                    }
                    totalPages = totalPagesFromApi;
                } catch (error) {
                    console.error('Lỗi khi tải sản phẩm:', error);
                    if (productListElement) {
                        productListElement.innerHTML = 'Không thể tải sản phẩm, vui lòng thử lại.';
                    }
                }
            }

            // Sự kiện khi tìm kiếm
            if (searchButton) {
                searchButton.addEventListener('click', function () {
                    currentPage = 1; // Reset về trang 1
                    const searchQuery = searchInput.value.trim();
                    const params = getParamsFromURL();
                    params.search = searchQuery; // Thêm tham số search
                    updateURL(params); // Cập nhật URL
                    loadProducts(); // Gọi API
                });
            }

            // Khởi tạo ban đầu
            const params = getParamsFromURL();
            if (searchInput) {
                searchInput.value = params.search || '';
            }
            currentPage = params.page || 1;
            loadProducts();
        });
        $(document).on("click", ".btn-remove", function () {
            var cartItemId = $(this).data("id");

            if (!confirm("Bạn có chắc chắn muốn xóa sản phẩm này?")) {
                return;
            }

            // Gửi AJAX request đến server
            $.ajax({
                url: '/User/DashBoard/RemoveItem',
                type: 'GET',
                data: { id: cartItemId },
                success: function (response) {
                    $(".dropdownmenu-wrapper").html(response); // Cập nhật phần còn lại
                    $(".dropdownmenu-wrapper").prepend('<div class="dropdown-cart-header">' + cartHeader + '</div>'); // Thêm lại tiêu đề vào đầu
                },
                error: function () {
                    alert("Có lỗi xảy ra khi xóa sản phẩm.");
                }
            });
        });
    </script>

</body>


<!-- Mirrored from portotheme.com/html/porto_ecommerce/category.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 07 Aug 2024 09:58:52 GMT -->
</html>